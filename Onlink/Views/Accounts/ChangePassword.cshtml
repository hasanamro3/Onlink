@model Onlink.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Brand</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;600;700&display=swap" rel="stylesheet" />

    <style>
        :root {
            --primary-color: #047123;
            --primary-dark: #035a1c;
            --glass-blur: 12px;
            --glass-opacity: 0.25;
        }

        body {
            align-items:center;
            transition: all 0.5s ease;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Raleway', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 20px;
        }

        .glass-container {
            background: rgba(255, 255, 255, var(--glass-opacity));
            backdrop-filter: blur(var(--glass-blur));
            -webkit-backdrop-filter: blur(var(--glass-blur));
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.18);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
            padding: 2.5rem;
            transition: all 0.3s ease;
            max-width: 500px;
            width: 100%;
        }

            .glass-container:hover {
                box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.25);
            }

        .password-icon {
            position: absolute;
            right: 15px;
            top: 55%;
            transform: translateY(-60%);
            cursor: pointer;
            color: var(--primary-color);
        }

        .form-control {
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.7);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 12px;
            padding: 12px 15px;
            height: 48px;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.25rem rgba(4, 113, 35, 0.15);
                background: rgba(255, 255, 255, 0.9);
            }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            transition: all 0.3s ease;
            border-radius: 12px;
            padding: 12px;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

            .btn-primary:hover {
                background-color: var(--primary-dark);
                border-color: var(--primary-dark);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(4, 113, 35, 0.2);
            }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            transition: all 0.3s ease;
            border-radius: 12px;
            padding: 12px;
            font-weight: 600;
        }

            .btn-outline:hover {
                background: rgba(4, 113, 35, 0.1);
                transform: translateY(-2px);
            }

        .text-danger {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }

        .password-strength {
            height: 5px;
            background: #e9ecef;
            border-radius: 3px;
            margin-top: 5px;
            overflow: hidden;
        }

        .strength-meter {
            height: 100%;
            width: 0;
            transition: width 0.3s ease;
        }

        .page-transition {
            animation: fadeIn 0.5s ease forwards;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@media (max-width: 768px) {
            .glass-container {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body class="page-transition">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="glass-container text-center">
                    <h2 class="mb-4"><span style="border-bottom: 3px solid var(--primary-color); padding-bottom: 0.25rem;">Change Password</span></h2>

                    <form asp-action="ChangePassword" method="post" class="text-start">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <!-- Current Password -->
                        <div class="mb-4 position-relative">
                            <label asp-for="CurrentPassword" class="form-label">Current Password</label>
                            <input asp-for="CurrentPassword" type="password" class="form-control" placeholder="Enter current password" />
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                            <i class="fas fa-eye password-icon" onclick="togglePassword('CurrentPassword', this)"></i>
                        </div>

                        <!-- New Password -->
                        <div class="mb-4 position-relative">
                            <label asp-for="NewPassword" class="form-label">New Password</label>
                            <input asp-for="NewPassword" type="password" class="form-control" placeholder="Enter new password"
                                   oninput="checkPasswordStrength(this.value)" />
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            <i class="fas fa-eye password-icon" onclick="togglePassword('NewPassword', this)"></i>
                            <div class="password-strength">
                                <div class="strength-meter" id="passwordStrength"></div>
                            </div>
                            <small class="text-muted">Password must be at least 8 characters long</small>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-4 position-relative">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm new password" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            <i class="fas fa-eye password-icon" onclick="togglePassword('ConfirmPassword', this)"></i>
                        </div>

                        <div class="d-flex gap-3 mt-4">
                            <a asp-action="Profile" class="btn btn-outline flex-grow-1">
                                <i class="fas fa-arrow-left me-2"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary flex-grow-1">
                                <i class="fas fa-key me-2"></i> Change Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toggle password visibility
        function togglePassword(inputId, icon) {
            const input = document.getElementById(inputId);
            if (input.type === "password") {
                input.type = "text";
                icon.classList.replace("fa-eye", "fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.replace("fa-eye-slash", "fa-eye");
            }
        }

        // Check password strength
        function checkPasswordStrength(password) {
            const strengthBar = document.getElementById('passwordStrength');
            let strength = 0;

            // Length check
            if (password.length >= 8) strength += 25;
            if (password.length >= 12) strength += 25;

            // Complexity checks
            if (/[A-Z]/.test(password)) strength += 15;
            if (/[0-9]/.test(password)) strength += 15;
            if (/[^A-Za-z0-9]/.test(password)) strength += 20;

            // Update strength meter
            strengthBar.style.width = `${strength}%`;

            // Update color based on strength
            if (strength < 50) {
                strengthBar.style.backgroundColor = '#ef4444'; // Red
            } else if (strength < 75) {
                strengthBar.style.backgroundColor = '#f59e0b'; // Amber
            } else {
                strengthBar.style.backgroundColor = '#10b981'; // Green
            }
        }

        // Smooth transition when navigating away
        document.querySelector('form').addEventListener('submit', function (e) {
            e.preventDefault();
            document.body.style.opacity = '0';
            document.body.style.transform = 'translateY(10px)';
            setTimeout(() => {
                this.submit();
            }, 500);
        });

        // Initialize password strength meter
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('passwordStrength').style.width = '0%';
        });
    </script>
</body>
</html>